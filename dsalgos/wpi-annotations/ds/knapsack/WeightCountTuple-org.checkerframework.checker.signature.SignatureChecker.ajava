package ds.knapsack;

import ds.Generated;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.signature.SignatureChecker")
public class WeightCountTuple {

    private final  @org.checkerframework.checker.signature.qual.SignatureUnknown int weight;

    private final  @org.checkerframework.checker.signature.qual.SignatureUnknown int count;

    public WeightCountTuple( @org.checkerframework.checker.signature.qual.SignatureUnknown int weight,  @org.checkerframework.checker.signature.qual.SignatureUnknown int count) {
        this.weight = weight;
        this.count = count;
    }

    @org.checkerframework.dataflow.qual.Pure
    public boolean equals(final Object o) {
        if (o == this)
            return true;
        if (!(o instanceof WeightCountTuple))
            return false;
        final WeightCountTuple other = (WeightCountTuple) o;
        if (!other.canEqual((Object) this))
            return false;
        if (this.weight != other.weight)
            return false;
        if (this.count != other.count)
            return false;
        return true;
    }

    @org.checkerframework.dataflow.qual.Pure
    protected boolean canEqual(final Object other) {
        return other instanceof WeightCountTuple;
    }

    @org.checkerframework.dataflow.qual.Pure
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        result = result * PRIME + this.weight;
        result = result * PRIME + this.count;
        return result;
    }
}
