package ds;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.optional.OptionalChecker")
public interface IStack {

    @org.checkerframework.dataflow.qual.Pure
    void push(@org.checkerframework.checker.optional.qual.MaybePresent IStack this,  @org.checkerframework.checker.optional.qual.MaybePresent long j);

    @org.checkerframework.dataflow.qual.Pure
     @org.checkerframework.checker.optional.qual.MaybePresent long pop(@org.checkerframework.checker.optional.qual.MaybePresent IStack this);

    @org.checkerframework.dataflow.qual.Pure
     @org.checkerframework.checker.optional.qual.MaybePresent long peek();

    @org.checkerframework.dataflow.qual.Pure
     @org.checkerframework.checker.optional.qual.MaybePresent boolean isEmpty(@org.checkerframework.checker.optional.qual.MaybePresent IStack this);

    @org.checkerframework.dataflow.qual.Pure
     @org.checkerframework.checker.optional.qual.MaybePresent boolean isFull();

    @org.checkerframework.dataflow.qual.Pure
     @org.checkerframework.checker.optional.qual.MaybePresent int size();
}
