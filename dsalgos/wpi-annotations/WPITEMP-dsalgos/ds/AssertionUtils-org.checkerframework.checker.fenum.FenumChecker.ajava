package ds;

import java.util.concurrent.ExecutorService;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.fenum.FenumChecker")
public final class AssertionUtils {

    @org.checkerframework.dataflow.qual.SideEffectFree
    private AssertionUtils() throws InstantiationException {
        throw new InstantiationException("Private constructor for: " + AssertionUtils.class.getName());
    }

    @org.checkerframework.dataflow.qual.SideEffectFree
    public static void assertEquality( @org.checkerframework.checker.fenum.qual.FenumUnqualified int first,  @org.checkerframework.checker.fenum.qual.FenumUnqualified int second) {
        if (first != second)
            throw new AssertionError(Integer.toString(first) + " is not the same as " + second);
    }

    public static void assertServiceTerminated(@org.checkerframework.checker.fenum.qual.FenumUnqualified ExecutorService service) {
        if (!service.isShutdown())
            throw new AssertionError("ExecutorService must be shutdown.");
        if (!Thread.currentThread().isInterrupted() && !service.isTerminated())
            throw new AssertionError("ExecutorService must terminate cleanly.");
    }
}
