package ds.knapsack;

import java.util.Arrays;
import java.util.List;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.optional.OptionalChecker")
public class BoundedKnapsack extends Knapsack {

    public BoundedKnapsack(Item[] items, int capacity) {
        super(items, capacity);
    }

    public @org.checkerframework.checker.optional.qual.MaybePresent Solution<Integer> solve(@org.checkerframework.checker.optional.qual.MaybePresent BoundedKnapsack this) {
        List<Item> itemsList = Item.unpack(Arrays.asList(items));
        Item[] items = itemsList.toArray(new Item[0]);
        Solution<Integer> solution = solveFor(items, capacity);
        itemsList = Item.pack(solution.getItems());
        return new Solution<>(itemsList, solution.getValue());
    }
}
